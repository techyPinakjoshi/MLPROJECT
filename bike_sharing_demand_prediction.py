# -*- coding: utf-8 -*-
"""Bike Sharing Demand Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16XySrnevvnoNpS4kxp7TDUpZLAmoq65B
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from google.colab import files

uploaded = files.upload()

# Assuming you uploaded 'SeoulBikeData.csv'
file_name = 'SeoulBikeData.csv'
df = pd.read_csv(file_name, encoding='ISO-8859-1')

df.head()

df.describe()

df.columns

x = df['Rented Bike Count']

y = df[['Date', 'Hour', 'Temperature(°C)', 'Humidity(%)',
       'Wind speed (m/s)', 'Visibility (10m)', 'Dew point temperature(°C)',
       'Solar Radiation (MJ/m2)', 'Rainfall(mm)', 'Snowfall (cm)', 'Seasons',
       'Holiday', 'Functioning Day']]

x.shape

y.shape

# Assuming 'df' is your DataFrame and 'target_column' is the column you want to predict
X = df.drop('Rented Bike Count', axis=1)  # Features
y = df['Rented Bike Count']  # Target variable

# Split the data into a training set (e.g., 80%) and a testing set (e.g., 20%)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# The 'test_size' parameter specifies the proportion of the dataset to include in the test split.
# The 'random_state' parameter ensures reproducibility. You can set it

df.head()

X_train.shape, X_test.shape

X_train.corr()

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(12, 10))
cor = X_train.corr()
sns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)
plt.show()

model = LinearRegression()
plt.show()

sns.pairplot(df)

plt.figure(figsize=(10,7))
Hour = df.groupby("Hour").sum().reset_index()
sns.barplot(x="Hour", y="Rented Bike Count", data=Hour)